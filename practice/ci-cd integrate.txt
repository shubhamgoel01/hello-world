devOps Project- CI-CD with Jenkins Ansible Docker Kubernetes

jenkins - Room

jenkins credentials:  
shubham/shubham
http://192.168.0.130:9091/

cat ~/.bash_profile
Download JAVA/jenkins/maven and set path accordingly

# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
        . ~/.bashrc
fi

# User specific environment and startup programs
JAVA_HOME=/usr/java/jdk-17

M2_HOME=/opt/maven/apache-maven-3.9.1
M2=$M2_HOME/bin
PATH=$PATH:$HOME/bin:$M2_HOME:$M2:$JAVA_HOME

export PATH

save and exit 

echo $JAVA_HOME
su
echo $JAVA_HOME


Now Set the JAVA/maven in jenkins server

jenkins plugin
1) github integration /github
2) maven integrate / maven invoker

Manage Jenkins -> Global tool config -> JDK

name:JAVA_HOME
JAVA_HOME:/usr/java/jdk-17/

Manage Jenkins -> Global tool config -> maven
Name : M2_HOME
MAVEN_HOME : /opt/maven/apache-maven-3.9.2


save it

Create a maven job :
Github project : https://github.com/shubhamgoel01/hello-world.git
goal : clean install package then build
ll /root/.jenkins/workspace/job2_maven_build/webapp/target/webapp.war

-------------------------------------------------------------
3) Intigrating tomcat server in jenkins
-------------------------------------------------------------
Download and start tomcat in local 
http://192.168.0.130:8080/
when click to manager App -> need access , so modify the files as below

find / -name context.xml
comment the line with -> Value ClassName  and restart the tomcat , now you can access default project

/opt/tomcat/conf/context.xml
/opt/tomcat/webapps/docs/META-INF/context.xml
/opt/tomcat/webapps/examples/META-INF/context.xml
/opt/tomcat/webapps/host-manager/META-INF/context.xml
/opt/tomcat/webapps/manager/META-INF/context.xml



Update users information in the tomcat-users.xml file goto tomcat home directory and Add below users to  below file
vim conf/tomcat-users.xml 
 <role rolename="manager-gui"/>
 <role rolename="manager-script"/>
 <role rolename="manager-jmx"/>
 <role rolename="manager-status"/>
 <user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
 <user username="deployer" password="deployer" roles="manager-script"/>
 <user username="tomcat" password="s3cret" roles="manager-gui"/>


To login tomcat server
tomcat/s3cret
-------------------------------------------------------------
	Deploy on tomcat server
-------------------------------------------------------------
Jenkins plugin : deploy to container (to deploy on tomcat-running in other box)

create a new maven job 
github project : 
goal : clean install package
Post-build Actions : select deploy to container 
WAR/EAR files :  **/*.war
Context path : 
Containers: select tomact9
		Credentials : deployer/deployer
		Tomcat URL : http://192.168.0.130:8080

Build now and http://192.168.0.130:8080/webapp

Poll SCM : * * * * * 
to check any changes every 1 minute . if yes then job start building

------set time in linux------
timedatectl
sudo timedatectl set-timezone Asia/Kolkata
sudo timedatectl set-ntp true
date
sudo timedatectl set-timezone Asia/Kolkata Asia/Kolkata

--------------------------------------------------------------------
4 ) Integrating Docker in CI/CD - jenkins
--------------------------------------------------------------------

start docker in local window / VM 
and pull tomcat image and start container



C:\Users\shubh>docker pull tomcat:9.0.75
9.0.75: Pulling from library/tomcat
1bc677758ad7: Pull complete
0d0e0ecb256a: Pull complete
c24bf4c725c2: Pull complete
4fb255c76461: Pull complete
b388fec4cd21: Pull complete
99a8fb48e61c: Pull complete
44f4facf54e7: Pull complete
Digest: sha256:92bdc746db04e2bb7764e19c68fcb68e3bb6eeebcee765b964526c13bb5598b3
Status: Downloaded newer image for tomcat:9.0.75
docker.io/library/tomcat:9.0.75

C:\Users\shubh>docker images
REPOSITORY   TAG       IMAGE ID       CREATED      SIZE
tomcat       9.0.75    5c0a063260b0   4 days ago   476MB

C:\Users\shubh>
C:\Users\shubh>
C:\Users\shubh>
C:\Users\shubh>docker run --name tomactcont1 -d -it -p 7070:8080 tomcat:9.0.75
c88b22ee39b40baa9c36eccecd646c3f22fd49519310c4d0c39b0f34772232ad

C:\Users\shubh>docker ps
CONTAINER ID   IMAGE           COMMAND             CREATED          STATUS         PORTS                    NAMES
c88b22ee39b4   tomcat:9.0.75   "catalina.sh run"   10 seconds ago   Up 9 seconds   0.0.0.0:7070->8080/tcp   tomactcont1


------------------------------------------------------------------------------------
# Deploy war file over ssh (another VM , in that VM we can run docker and create docker file and in jenkins we can start build and run container)
# here we are adding VM into jenkins
Jenkins plugin : publish over ssh  

manage jenkins -> Configure system ->  Publish over SSH -> SSH Server    (Add VM IP , where you want to store war file)

Name : VM2 or any
Hostname : 192.168.0.171
Username : root (any user like wsadmin)
Advance:
Use password authentication, or use a different key ?
Passphrase / Password : padnet

go down and click on test configurations
if not success , then do in  VM (192.168.0.171)

vim /etc/ssh/sshd_config
PasswordAuthentication yes

server sssh reload

and then check again click on test configurations , it will succes

------------------------------------------------------------------------------------

 create a new job 
guthub URl
goal:clean install package
Post-build Actions :
	Send build artifacts over SSH

Transfers
Transfer set

Source files : webapp/target/*.war
Remove prefix : webapp/target

Apply and save and build job

ll /root/webapp.war  in 192.168.0.171 

-----------------------------------------------------------------------------------
take war file 
and copy to - under one project name : war-project and create one file with name : Dockerfile
--------------
FROM tomcat:9.0.75

MAINTAINER Shubham

COPY .  /usr/local/tomcat/webapps
-----------------------
-----------------------
# Build docker with war and Dockerfile using command

C:\Users\Shubham\Desktop\docker\war-project>docker build -t wartomcat .
[+] Building 0.3s (7/7) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                   0.1s
 => => transferring dockerfile: 114B                                                                                                                   0.0s
 => [internal] load .dockerignore                                                                                                                      0.1s
 => => transferring context: 2B                                                                                                                        0.0s
 => [internal] load metadata for docker.io/library/tomcat:9.0.75                                                                                       0.0s
 => [internal] load build context                                                                                                                      0.1s
 => => transferring context: 2.48kB                                                                                                                    0.0s
 => [1/2] FROM docker.io/library/tomcat:9.0.75                                                                                                         0.1s
 => [2/2] COPY .  /usr/local/tomcat/webapps                                                                                                            0.0s
 => exporting to image                                                                                                                                 0.0s
 => => exporting layers                                                                                                                                0.0s
 => => writing image sha256:b5967919bb9ac9a9da912daebf20cbcd4cfca689a988cc7faaf91785c6e36505                                                           0.0s
 => => naming to docker.io/library/wartomcat                                                                                                           0.0s

C:\Users\Shubham\Desktop\docker\war-project>docker images
REPOSITORY        TAG          IMAGE ID       CREATED          SIZE
wartomcat         latest       b5967919bb9a   15 seconds ago   476MB




C:\Users\Shubham\Desktop\docker\war-project>docker ps
CONTAINER ID   IMAGE                        COMMAND                  CREATED         STATUS                 PORTS                    NAMES
3a608c60f4e1   wartomcat                    "catalina.sh run"        5 seconds ago   Up 4 seconds           0.0.0.0:8002->8080/tcp   warcont1
942ea406711d   tomcat:9.0.75                "catalina.sh run"        4 hours ago     Up 4 hours             0.0.0.0:8888->8080/tcp   tomcatc1

http://192.168.3.95:8002/webapp/

war project output will come display

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------
build image and run container in jenkins

install docker in oracle : https://oracle-base.com/articles/linux/docker-install-docker-on-oracle-linux-ol8
in jenkins : 
GIthub URL:
Post-build Actions
	Send build artifacts over SSH
	SSH server : select 	VM 3 where docker running
		Source files : webapp/target/*.war
		Remove prefix : webapp/target/
		Remote directory : //opt//dock
		Exec command : cd  /opt/dock ; docker build -t dockerimg . ; docker run --name dockercont1 -d -it  -p 8880:8080 dockerimg ;
			
In other VM 
[root@VM3 dock]# ll /opt/dock/
total 8
-rw-r--r-- 1 root root   74 May 15 21:51 Dockerfile
-rw-r--r-- 1 root root 2323 May 15 22:07 webapp.war

vim Dockerfile
FROM tomcat:9.0.75

MAINTAINER Shubham

COPY .  /usr/local/tomcat/webapps

Access the http://192.168.2.112:8880/webapp/

task complete 
docker stop dockercont1
docker rm dockercont1
docker rmi dockerimg


issue : If you run same job again , you will get issue that you cant create container with same name again , so TO Overcsome this problem we will use ansible
----------------------------------------------------------------------------------------------------------------------------------------------------

---
- name: Create docker image with ansible
  hosts: all
  become: true
  tasks:
    - name: Remove existing docker image
      command: "docker rmi simple-devops-image"
      ignore_errors: true


    - name: building docker image
      shell: "docker build -t simple-devops-image ." 
      args: 
        chdir: /opt/dock

--------------------------------------------------------------------------------------------------------
---
- name: Create docker image with ansible
  hosts: all
  become: true
  tasks:
    - name: Remove existing docker image
      command: "docker rmi simple-devops-image"
      ignore_errors: true


    - name: building docker image
      shell: "cd /opt/dock && docker build -t simple-devops-image ." 

[root@VM3 dock]# ansible-playbook  docker_image.yml -kv
[root@VM3 dock]# ll /opt/dock/
total 16
-rw-r--r-- 1 root root   74 May 15 21:51 Dockerfile
-rw-r--r-- 1 root root  302 May 15 22:46 docker_image.yml
-rw-r--r-- 1 root root  328 May 15 22:45 docker_image.yml-bkp
-rw-r--r-- 1 root root 2323 May 15 22:07 webapp.war

ABOVE: we run manually ansible playbook to check , Now we will run ansible playbook in jenkins , 
------------------------------------------------------------------------------------------------------------------------------------------------------------
jenkins 192.168.0.121
docker 192.168.0.139

jenkins job : 
github code
Goals and options : clean install package
Send build artifacts over SSH :	
	choose server name : where docker is running and where playbook file are 
	Source files : webapp/target/*.war
	Remove prefix : webapp/target/
	Exec command : cd  /opt/dock ;ansible-playbook  docker_image.yml 


NOTE: jenkins run on 192.168.0.121 , it build and transfer file on 192.168.0.139 and  execute below command
cd  /opt/dock ;ansible-playbook  docker_image.yml

[root@192.168.0.139  ]# ll /opt/dock/
total 16
-rw-r--r-- 1 root root   74 May 15 21:51 Dockerfile
-rw-r--r-- 1 root root  302 May 15 22:46 docker_image.yml
-rw-r--r-- 1 root root  328 May 15 22:45 docker_image.yml-bkp
-rw-r--r-- 1 root root 2323 May 16 12:50 webapp.war



it success
(Currently using Jenkins we build and deploy war file into another VM (In that VM - Docker/Ansible running ) , and we are using ansible to build image and run docker container)
But in real scenerio we have to deploy war file into many ansible target host. 
So we will use Docker Hub , we will store image into docker hub (centralized) rather then into create into one VM / local , so that target system pull images from docker_hub
--------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------
NOW Docker HUB Integration with Ansible
--------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------
docker tag local-image:tagname new-repo:tagname 		docker tag simple-devops-image  shubham1921/simple-devops-image   		NOTE: username -> shubham1921
docker push new-repo:tagname						docker push shubahm1921/simple-devops-image
Make sure to change tagname with your desired image repository tag.
 

[root@VM3 dock]# docker images
REPOSITORY            TAG       IMAGE ID       CREATED         SIZE
simple-devops-image   latest    0d141472ea41   4 minutes ago   476MB
[root@VM3 dock]#
[root@VM3 dock]#
[root@VM3 dock]# docker tag simple-devops-image  shubham1921/simple-devops-image
[root@VM3 dock]# docker images
REPOSITORY                    TAG       IMAGE ID       CREATED         SIZE
simple-devops-image           latest    0d141472ea41   4 minutes ago   476MB
shubahm/simple-devops-image   latest    0d141472ea41   4 minutes ago   476MB
[root@VM3 dock]#
[root@VM3 dock]#
[root@VM3 dock]# docker push shubahm1921/simple-devops-image
Using default tag: latest
The push refers to repository [docker.io/shubahm/simple-devops-image]
771ab070c5d3: Preparing
3e3d3d978b9b: Preparing
817f175f3d94: Preparing
74d620724878: Preparing
57b27cfbd6e6: Preparing
b421f864ecf0: Waiting
b09de1b6a666: Waiting
b8a36d10656a: Waiting
denied: requested access to the resource is denied

shubham1921/Shubham1921

[root@VM3 dock]# docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: shubham1921
Password:
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded



[root@VM3 dock]# docker tag simple-devops-image  shubham1921/simple-devops-image
[root@VM3 dock]# docker push shubham1921/simple-devops-image
Using default tag: latest
The push refers to repository [docker.io/shubham1921/simple-devops-image]
771ab070c5d3: Pushed
3e3d3d978b9b: Pushed
817f175f3d94: Pushed
74d620724878: Pushed
57b27cfbd6e6: Pushed
b421f864ecf0: Pushed
b09de1b6a666: Pushed
b8a36d10656a: Pushed
latest: digest: sha256:3d263dd15d21ae582865b9d0052615df18d5415fefebe53bc155af384804954d size: 1996


-------------------------------------------------------------------------------------
-->  NOw we can check our custom image into Docker hub
#  Now delete image from local and pull that image from docker hub to local
-------------------------------------------------------------------------------------

[root@VM3 dock]# docker rmi shubham1921/simple-devops-image
Untagged: shubham1921/simple-devops-image:latest
Untagged: shubham1921/simple-devops-image@sha256:3d263dd15d21ae582865b9d0052615df18d5415fefebe53bc155af384804954d
[root@VM3 dock]#
[root@VM3 dock]# docker images
REPOSITORY                    TAG       IMAGE ID       CREATED          SIZE
simple-devops-image           latest    0d141472ea41   17 minutes ago   476MB
[root@VM3 dock]# docker pull shubham1921/simple-devops-image
Using default tag: latest
latest: Pulling from shubham1921/simple-devops-image
Digest: sha256:3d263dd15d21ae582865b9d0052615df18d5415fefebe53bc155af384804954d
Status: Downloaded newer image for shubham1921/simple-devops-image:latest
docker.io/shubham1921/simple-devops-image:latest
[root@VM3 dock]# docker images
REPOSITORY                        TAG       IMAGE ID       CREATED          SIZE
shubham1921/simple-devops-image   latest    0d141472ea41   18 minutes ago   476MB
simple-devops-image               latest    0d141472ea41   18 minutes ago   476MB

-------------------------------------------------------------------------------------
Now try to pull images from other system , below trying in window , because we push image as a public , we are able to pull 
-------------------------------------------------------------------------------------

C:\Users\Shubham>docker pull shubham1921/simple-devops-image
Using default tag: latest
latest: Pulling from shubham1921/simple-devops-image
1bc677758ad7: Already exists
0d0e0ecb256a: Already exists
c24bf4c725c2: Already exists
4fb255c76461: Already exists
b388fec4cd21: Already exists
99a8fb48e61c: Already exists
44f4facf54e7: Already exists
57ae469f8127: Pull complete
Digest: sha256:3d263dd15d21ae582865b9d0052615df18d5415fefebe53bc155af384804954d
Status: Downloaded newer image for shubham1921/simple-devops-image:latest
docker.io/shubham1921/simple-devops-image:latest

C:\Users\Shubham>docker run --name test1 -d -it -p 8888:8080 shubham1921/simple-devops-image
ea6d0b2f15f74a51fc5b72809ccc26530c7eea5da07ce7dbc4b535ffb4ec30bc

http://192.168.3.95:8888/webapp/

Able to access project in window system 
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------

NOW our scenerio is : 

In jenkins , we are fetching code from Github and building and deploy the .war file into another VM (where docker/ansible running) 
Now we need  2 playbook , one that push images into docker hub and other one for deployment , that run on host/target system (To create docker container on target system/hosts)

git -----> jenkins --------------> Ansible 
						↓
						↓
		docker-image-push		↓
	↓-------------<-----<---------↓	 Deployment
	↓					↓	
	↓					↓ 
	↓					↓ 
	↓					↓
	Docker hub----------------> Docker
			docker-image-pull



------------------------------------------------------------------------------------------------
# First playbook , that run on Ansible server to create build image and push to docker hub
------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
tagging Docker images using Ansible -Plabook
-------------------------------------------------------------------------------------


[root@VM3 dock]# ll
total 20
-rw-r--r-- 1 root root   74 May 15 21:51 Dockerfile
-rw-r--r-- 1 root root  302 May 15 22:46 docker_image.yml
-rw-r--r-- 1 root root  328 May 15 22:45 docker_image.yml-bkp
-rw-r--r-- 1 root root  593 May 17 01:30 push2dockerhub.yml
-rw-r--r-- 1 root root 2323 May 16 22:16 webapp.war


[root@VM3 dock]# cat push2dockerhub.yml
---
- name: create docker image and push to docker-hub
  hosts: all
  user: root
  become: true
  tasks:
  - name: create docker image
    command: docker build -t simple-devops-image /opt/dock/.

  - name: tagging the local docker image
    command: "docker tag simple-devops-image:latest  shubham1921/simple-devops-image"

  - name:  push docker image tp docker hub
    command: "docker push shubham1921/simple-devops-image:latest"

  - name:  remove docker image from local
    command: "docker rmi simple-devops-image:latest shubham1921/simple-devops-image:latest"
    ignore_errors: true



[root@VM3 dock]# ansible-playbook  push2dockerhub.yml

PLAY [create docker image and push to docker-hub] *******************************************************************************************************************************************

TASK [Gathering Facts] **********************************************************************************************************************************************************************
[WARNING]: Platform linux on host 192.168.2.112 is using the discovered Python interpreter at /usr/bin/python, but future installation of another Python interpreter could change this. See
https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information.
ok: [192.168.2.112]

TASK [create docker image] ******************************************************************************************************************************************************************
changed: [192.168.2.112]

TASK [tagging the local docker image] *******************************************************************************************************************************************************
changed: [192.168.2.112]

TASK [push docker image tp docker hub] ******************************************************************************************************************************************************
changed: [192.168.2.112]

TASK [remove docker image from local] *******************************************************************************************************************************************************
changed: [192.168.2.112]

PLAY RECAP **********************************************************************************************************************************************************************************
192.168.2.112              : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0




------------------------------------------------------------------------------------------------
# Second playbook , that run on Ansible target host  to Pull image from docker hib and run container
------------------------------------------------------------------------------------------------
[root@VM3 dock]# ll
total 24
-rw-r--r-- 1 root root   74 May 15 21:51 Dockerfile
-rw-r--r-- 1 root root  302 May 15 22:46 docker_image.yml
-rw-r--r-- 1 root root  328 May 15 22:45 docker_image.yml-bkp
-rw-r--r-- 1 root root  745 May 17 03:04 pullfromdocker.yml
-rw-r--r-- 1 root root  593 May 17 01:30 push2dockerhub.yml
-rw-r--r-- 1 root root 2323 May 16 22:16 webapp.war

[root@VM3 dock]# cat pullfromdocker.yml
---
- name: create docker image and push to docker-hub
  hosts: all
  user: root
  become: true
  tasks:
  - name: Stop current running docker container
    command: docker stop  simple-devops-container
    ignore_errors: true

  - name: Remove docker container
    command: docker rm simple-devops-container
    ignore_errors: true

  - name:  Remove docker image
    command: docker rmi shubham1921/simple-devops-image:latest
    ignore_errors: true

  - name:  Pull docker image from docker-hub
    command: docker pull shubham1921/simple-devops-image:latest

  - name:  create container and run using simple-devops-image
    command: docker run --name simple-devops-container -d -it -p 8080:8080 shubham1921/simple-devops-image:latest
    
 
 Access the docker container : http://192.168.2.112:8080/webapp/
 
 [root@VM3 dock]# docker images
REPOSITORY                        TAG       IMAGE ID       CREATED       SIZE
shubham1921/simple-devops-image   latest    52ab331e81fd   2 hours ago   476MB
[root@VM3 dock]# docker ps -a
CONTAINER ID   IMAGE                                    COMMAND             CREATED         STATUS         PORTS                                       NAMES
1c7b06620e69   shubham1921/simple-devops-image:latest   "catalina.sh run"   5 minutes ago   Up 5 minutes   0.0.0.0:8080->8080/tcp, :::8080->8080/tcp   simple-devops-container


------------------------------------------------------------------------------------------------
# Let say ansible run on server1 and docker on server2 , we want to run playbook1 (to build image ) on server1 and 
want to run playbook2 (to create container) on server2 , but in our host file of ansible: many host available 
like : 
[root@VM3 dock]# cat /etc/ansible/hosts
192.168.2.112
192.168.3.207
#192.168.0.139

so we can restrict using below comamnd to run playbook on 1st server 
[root@VM3 dock]# ansible-playbook  docker_image.yml --limit 192.168.2.112 	for build image (playbook1 on server1 where ansible server )

[root@VM3 dock]# ansible-playbook  docker_image.yml --limit 192.168.3.207	for container (playbook2) on server2,3  , target hosts
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
NOW Jenkins job to deploy war file into docker container using Ansible playbook 
just use the above two plabook command in jenkins exec places

New JOb : let say : Jenkins2deploy_docker_using_Ansible

Github URL : https://github.com/shubhamgoel01/hello-world.git
branch : */main
goal : clean install package
Send build artifacts over SSH : select server where ansible playbook are : Ansible server , so that we can run playbook on target hosts as well (VM3)
Source files : webapp/target/*.war
Remove prefix : webapp/target/
Remote directory: //opt//dock
Exec command : cd  /opt/dock ;ansible-playbook  push2dockerhub.yml ; ansible-playbook pullfromdocker.yml

save and build the job

NOTE : First try to use below command to test server with out password , else generate key-gen and save the key to other VM
ssh-keygen
ssh-copy-id ansadmin@<target-server>

[root@VM3 dock]# ansible all -m ping

------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
	K8 : kubernetes
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
























